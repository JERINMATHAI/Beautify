{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/": {
            "get": {
                "description": "Home page for user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Home",
                "operationId": "User Home",
                "responses": {
                    "200": {
                        "description": "Welcome to home !",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/": {
            "get": {
                "description": "Welcome to Admin Home",
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Home",
                "operationId": "AdminHome",
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/brands": {
            "get": {
                "description": "Get a list of all product brands from the database",
                "tags": [
                    "Product"
                ],
                "summary": "Get a list of all product brands",
                "responses": {
                    "200": {
                        "description": "Successfuly listed all brands",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to get brands",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new product category or brand to the database",
                "tags": [
                    "Product"
                ],
                "summary": "Add a new product category or brand",
                "parameters": [
                    {
                        "description": "Category or Brand details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry or Failed to add brand",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupons/create": {
            "post": {
                "description": "Create coupons",
                "tags": [
                    "Coupon"
                ],
                "summary": "Create coupons",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCoupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupons/list": {
            "post": {
                "description": "List all coupons",
                "tags": [
                    "Coupon"
                ],
                "summary": "List all coupons",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of users to fetch per page",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of coupons",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "internal serever error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/dashboard/salesReport": {
            "get": {
                "description": "Generate a sales report in PDF format based on provided filters",
                "tags": [
                    "Order"
                ],
                "summary": "Generate sales report PDF",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count of items per page",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated pdf",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs or Please add start date as params or Please add end date as params or There is no sales report on this period",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to generate PDF",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "Login to Admin account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Login",
                "operationId": "AdminLogin",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to login",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Generate JWT failure",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/payment/add": {
            "get": {
                "description": "Get payment method",
                "tags": [
                    "Payment"
                ],
                "summary": "Get payment method",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payment methods",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": " internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add payment method",
                "tags": [
                    "Payment"
                ],
                "summary": "Add payment method",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added payment method",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Can't add payment method",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/payment/delete": {
            "delete": {
                "description": "Delete payment method",
                "tags": [
                    "Payment"
                ],
                "summary": "Delete payment method",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully deleted method",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "can't delete payment method",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/payment/update": {
            "patch": {
                "description": "Update payment method",
                "tags": [
                    "Payment"
                ],
                "summary": "Update payment method",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully updated method",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Can't update data",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/add": {
            "post": {
                "description": "Add a new product to the database",
                "tags": [
                    "Product"
                ],
                "summary": "Add a new product",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added successful",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry or Failed to add product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/addimage": {
            "post": {
                "description": "Add images to a product in the database",
                "tags": [
                    "Product"
                ],
                "summary": "Add images to a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added images",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Error while fetching product_id or Error while fetching image file or No image files found or Can't be add images",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/delete": {
            "delete": {
                "description": "Delete a product from the database",
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "description": "Product ID to be deleted",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid input",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/list": {
            "get": {
                "description": "List products from the database",
                "tags": [
                    "Product"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count of items per page",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product listed successfuly",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "failed to get all products",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/update": {
            "put": {
                "description": "Update a product in the database",
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "description": "Updated product details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successful",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid input or failed to update product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/signup": {
            "post": {
                "description": "Create new Admin account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin SignUp",
                "operationId": "AdminSignUp",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignupUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin account created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to create Admin account",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/users/block": {
            "patch": {
                "description": "Block users in admin side",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Block Users",
                "operationId": "BlockUser",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Block"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed user block_status",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to change user block_status",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/cart/add": {
            "post": {
                "description": "Add a product item to the user's cart",
                "tags": [
                    "Cart"
                ],
                "summary": "Add product to cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Product details to be added to cart",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddToCartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly added product item to cart",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid input or failed to add product item to cart",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/cart/delete": {
            "delete": {
                "description": "Delete cart items of the user in the database",
                "tags": [
                    "User"
                ],
                "summary": "Delete user's cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Cart delete details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteCartItemReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly removed item from cart",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/cart/get": {
            "get": {
                "description": "Retrieve cart items of the user from the database",
                "tags": [
                    "User"
                ],
                "summary": "Get user's cart items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Cart Items successful",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/cart/update": {
            "put": {
                "description": "Update cart items of the user in the database",
                "tags": [
                    "User"
                ],
                "summary": "Update user's cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Cart update details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly updated cart",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "No user id on context",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to user account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "operationId": "User login",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP send to your mobile number!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to login",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Generate JWT failure",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/login/otp-verify": {
            "post": {
                "description": "OTP Verification to user account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User OTP Verification",
                "operationId": "User OTP Verification",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OTPVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or Invalid entry",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to login",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Logout from user account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Logout",
                "operationId": "User Logout",
                "responses": {
                    "200": {
                        "description": "Log out successful",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/all": {
            "get": {
                "description": "Get a list of all orders",
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Count of items per page",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Orders successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/cancelOrder": {
            "delete": {
                "description": "Cancel an order based on the provided order ID",
                "tags": [
                    "Order"
                ],
                "summary": "Cancel an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Please add id as params or Can't delete order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/createOrder": {
            "post": {
                "description": "Create an order with specified address and payment method",
                "tags": [
                    "Order"
                ],
                "summary": "Create an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "address_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Payment Method ID",
                        "name": "paymentmethod_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created order. Please complete payment",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to get address id or Failed to get payment method id or Failed to get total amount or Failed to create order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/listOrder": {
            "get": {
                "description": "List all orders for the authenticated user",
                "tags": [
                    "Order"
                ],
                "summary": "List all orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Count of items per page",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Orders successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/payment": {
            "post": {
                "description": "Process order checkout and generate payment information",
                "tags": [
                    "Order"
                ],
                "summary": "Process order checkout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully confirmed order or generated payment information",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Please add order_id as params or Failed to find payment method or Failed to place order or error while getting id from cookie or error while getting total amount or error while getting details or failed to create razorpay order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/placeOrder": {
            "post": {
                "description": "Place an order and apply a coupon if available",
                "tags": [
                    "Order"
                ],
                "summary": "Place an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Coupon ID (optional)",
                        "name": "coupon_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully confirmed order, complete payment process on delivery or placed order with complete payment details",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid coupon or Add more quantity or Failed to place order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order/updateOrder": {
            "put": {
                "description": "Update order details based on provided data",
                "tags": [
                    "Order"
                ],
                "summary": "Update order details",
                "parameters": [
                    {
                        "description": "Update Order Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Error while getting data from users or Error while updating data",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Retrieve user profile details from the database",
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly got profile",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong!",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile/add-address": {
            "post": {
                "description": "Add the addresss of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Add user addresss",
                "operationId": "Add user addresss",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address saved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or Invalid entry",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile/delete-address": {
            "delete": {
                "description": "Delete the addresss of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user addresss",
                "operationId": "Delete user addresss",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or Invalid entry",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile/edit-address": {
            "put": {
                "description": "update the addresss of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "update addresss",
                "operationId": "update user addresss",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddressPatchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or Invalid entry",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile/getaddress": {
            "post": {
                "description": "Get all the addresss of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all user addresss",
                "operationId": "Get all user addresss",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all addresses successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/return/product": {
            "post": {
                "description": "Request to return an order based on the provided order ID and reason",
                "tags": [
                    "Order"
                ],
                "summary": "Request to return an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reason for return",
                        "name": "reason",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully requested to return products",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Please add order id as params or Error while getting id from cookie or Invalid order_id or Failed to find refund amount or Failed to return order",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create new user account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Signup",
                "operationId": "User Signup",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignupUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or Invalid entry",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a paginated list of users.",
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of users to fetch per page",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List user successful",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to get all users",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.PaymentMethod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "request.AddToCartReq": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.Address": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "pin_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.AddressPatchReq": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "integer"
                },
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "pin_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "request.Block": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.Category": {
            "type": "object",
            "properties": {
                "brand_category_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.CreateCoupon": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "discount_max_amount": {
                    "type": "number"
                },
                "discount_percent": {
                    "type": "number"
                },
                "min_order_value": {
                    "type": "number"
                },
                "valid_till": {
                    "type": "string"
                }
            }
        },
        "request.DeleteCartItemReq": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "request.DeleteProductReq": {
            "type": "object",
            "required": [
                "Prod_id"
            ],
            "properties": {
                "Prod_id": {
                    "type": "integer"
                }
            }
        },
        "request.LoginData": {
            "type": "object",
            "required": [
                "Password"
            ],
            "properties": {
                "Password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "email": {
                    "description": "Phone    string `json:\"phone\" binding:\"omitempty,min=10,max=10\"`",
                    "type": "string"
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.OTPVerify": {
            "type": "object",
            "required": [
                "otp",
                "user_id"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.ProductReq": {
            "type": "object",
            "required": [
                "brand_id",
                "description",
                "price",
                "product_name"
            ],
            "properties": {
                "brand_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "price": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "request.SignupUserData": {
            "type": "object",
            "required": [
                "age",
                "email",
                "first_name",
                "last_name",
                "password",
                "phone",
                "user_name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.UpdateCartReq": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "request.UpdateOrder": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "integer"
                },
                "delivery_status": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "payment_status": {
                    "type": "string"
                },
                "paymentmethod_id": {
                    "type": "integer"
                }
            }
        },
        "request.UpdateProductReq": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    }
}