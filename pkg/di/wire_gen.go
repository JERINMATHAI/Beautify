// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"beautify/pkg/api"
	"beautify/pkg/api/handler"
	"beautify/pkg/config"
	"beautify/pkg/db"
	"beautify/pkg/repository"
	"beautify/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	adminRepository := repository.NewAdminRepository(gormDB)
	adminService := usecase.NewAdminService(adminRepository)
	adminHandler := handler.NewAdminHandler(adminService)
	userRepository := repository.NewUserRepository(gormDB)
	userService := usecase.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userService)
	productRepository := repository.NewProductRepository(gormDB)
	productService := usecase.NewProductUseCase(productRepository)
	productHandler := handler.NewProductHandler(productService)
	paymentRepository := repository.NewPaymentRepository(gormDB)
	paymentService := usecase.NewPaymentUseCase(paymentRepository)
	paymentHandler := handler.NewPaymentHandler(paymentService)
	couponRepository := repository.NewCouponRepository(gormDB)
	couponService := usecase.NewCouponUseCase(couponRepository)
	couponHandler := handler.NewCouponHandler(couponService)
	orderRepository := repository.NewOrderRepository(gormDB)
	orderService := usecase.NewOrderUseCase(orderRepository)
	orderHandler := handler.NewOrderHandler(orderService)
	serverHTTP := http.NewServerHTTP(adminHandler, userHandler, productHandler, paymentHandler, couponHandler, orderHandler)
	return serverHTTP, nil
}
